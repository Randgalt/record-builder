package io.soabase.recordbuilder.core;

import java.lang.annotation.*;

@Retention(RetentionPolicy.SOURCE)
@Target(ElementType.TYPE)
@Inherited
public @interface RecordWither {
    @Retention(RetentionPolicy.SOURCE)
    @Target({ ElementType.TYPE, ElementType.PACKAGE })
    @Inherited
    @interface Options {
        /**
         * The name to use for the nested With class
         */
        String withClassName() default "With";

        /**
         * The prefix to use for the methods in the With class
         */
        String withClassMethodPrefix() default "with";

        /**
         * Return the comment to place at the top of generated files. Return null or an empty string for no comment.
         */
        String fileComment() default "Auto generated by io.soabase.recordbuilder.core.RecordBuilder: https://github.com/Randgalt/record-builder";

        /**
         * Return the file indent to use
         */
        String fileIndent() default "    ";

        /**
         * If the record is declared inside another class, the outer class's name will be prefixed to the builder name
         * if this returns true.
         */
        boolean prefixEnclosingClassNames() default true;

        /**
         * The name to use for the from-to-wither method
         */
        String fromMethodName() default "from";

        /**
         * The {@link #fromMethodName} method instantiates an internal private class. This is the name of that class.
         */
        String fromWithClassName() default "_FromWith";
    }
}
